- hosts: dbservers
  become: yes
  become_user: root

  pre_tasks:
    - name: Install PostgreSQL package
      apt: 
        name: ["postgresql-contrib", "postgresql-client"]
        state: present
        update_cache: yes

    - name: Install pip3
      apt: 
        name: ["python3-pip"]
        state: present 
        update_cache: yes

    - name: "Install Python packages" 
      pip: 
        name: "{{ item }}"
        state: present
      with_items: 
        - psycopg2-binary
  
  tasks: 
  - name: Check if PostgreSQL is Initialized
    ansible.builtin.stat: 
      path: /var/lib/postgresql/16/main
    register: postgres_data

  - name: debug stat
    ansible.builtin.debug:
      msg: "Postgres data debug {{postgres_data}}"

  - name: "Initialize PostgreSQL"
    apt:
      name: postgresql
      state: present

  - name: "Start and enable services"
    service: 
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items: 
      - postgresql

  - name: Create app database 
    postgresql_db: 
      state: present
      name: dbname_ueiu # Databse name
    become: yes
    become_user: postgres

  - name: "Create db user"
    postgresql_user: 
      state: present
      name: user # User name for db 
      password: aLvUzUkaU9nNK4MVEksMiCkkjFofBwp5 # Password for db
    become: yes
    become_user: postgres

  - name: "Grant db user access to app db" 
    postgresql_privs: 
      type: database
      database: dbname_ueiu # Database name
      roles: user # Database user name
      grant_option: no
      privs: all
    become: yes
    become_user: postgres

  - name: "Allow md5 connection for db user"
    postgresql_pg_hba: 
      dest: "/etc/postgresql/14/main/pg_hba.conf"
      contype: host
      databases: all
      source: 0.0.0.0/0
      method: md5
      users: user # Db user name
      create: true
    become: yes 
    become_user: postgres
    notify: restart postgres

  - name: "Allow connections from all"
    lineinfile: 
      path: "/etc/postgresql/14/main/postgresql.conf"
      line: "listen_addresses = '*'"
      regexp: "^#listen_addresses = 'localhost'"
      state: present 
    become: yes
    become_user: postgres
    notify: restart postgres

  handlers: 
    - name: restart postgres
      service: name=postgresql state=restarted